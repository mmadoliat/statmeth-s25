---
title: "HW 1"
subtitle: "Viz dat, wrangle dis!"
---

For any exercise where you're writing code, insert a code chunk and make sure to label the chunk. Use a short and informative label. For any exercise where you're creating a plot, make sure to label all axes, legends, etc. and give it an informative title. For any exercise where you're including a description and/or interpretation, use full sentences. Make a commit at least after finishing each exercise, or better yet, more frequently. Push your work regularly to GitHub. Once you're done, inspect your GitHub repo to make sure you've pushed all of your changes.

::: callout-note
Your homework repositories are set up to run a GitHub action every time you push to the repository checking for (1) any files that shouldn't be in your repository or that should be in a specific folder in your repository and (2) whether your Quarto document renders.

![](images/badge-fail.svg){fig-align="left" style="float: left;" width="122" height="14"}

If either of these checks fail, you'll see a red badge on your repository README and you'll get an email saying "check assignment" action has failed.

![](images/badge-pass.svg){fig-align="left" style="float: left;" width="122" height="14"}

If they pass, you'll see a green badge on your repository README and you won't get an email saying.

Up until the deadline, it doesn't matter how many times these checks fail. Just make sure by the end the badge is green.
:::

```{r}
#| label: load-packages
#| include: false

library(tidyverse)
library(openintro)
```

## Question 1

**NYC marathon winners.**

The New York City Marathon is an annual marathon (26.2Â miles / 42.195 kilometers) that courses through the five boroughs of New York City. Marathon times of runners in the Men and Women divisions of the New York City Marathon between 1970 and 2020 can be found in the `nyc_marathon` dataset in the **openintro** package (which is already installed for you). You can find out more about the dataset by inspecting its documentation with `?nyc_marathon` and you can also find this information [here](http://openintrostat.github.io/openintro/reference/nyc_marathon.html).

a\. Create a histogram and a box plot of the distribution of marathon times of all runners in the dataset. What features of the distribution are apparent in the histogram and not the box plot? What features are apparent in the box plot but not in the histogram?

b\. Create a side-by-side box plots of marathon times for men and women. Use different colors for the each of the box plots -- do not use the default colors, but instead manually define them (you can choose any two colors you want). Based on the plots you made, compare the distribution of marathon times for men and women.

c\. What information in the above plot is redundant? Redo the plot avoiding this redundancy. How does this update change the data-to-ink ratio?

d\. Visualize the marathon times of men and women over the years. As is usual with time series plot, year should go on the x-axis. Use different colors and shapes to represent the times for men and women. Make sure your colors match those in the previous part. Once you have your plot, describe what is visible in this plot but not in the others.

## Question 2

**US counties.**

The following questions use the `county` dataset in the **openintro** package. You can find out more about the dataset by inspecting its documentation with `?county` and you can also find this information [here](https://openintrostat.github.io/usdata/reference/county.html).

a\. What does the following code do? Does it work? Does it make sense? Why/why not?

```{r}
#| eval: false

ggplot(county) +
  geom_point(aes(x = median_edu, y = median_hh_income)) +
  geom_boxplot(aes(x = smoking_ban, y = pop2017))
```

b\. Which of the following two plots makes it easier to compare poverty levels (poverty) across people from different median education levels (median_edu)? What does this say about when to place a faceting variable across rows or columns?

```{r}
#| fig-width: 8
#| fig-asp: 0.8

ggplot(county |> filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(median_edu ~ .)
```

```{r}
#| fig-width: 8
#| fig-asp: 0.4

ggplot(county |> filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(. ~ median_edu)
```

c\. Recreate the R code necessary to generate the following graphs. Note that wherever a categorical variable is used in the plot, it's `metro`.

::: {layout-ncol="2"}
![](images/county-recreate-1.png)
:::
